<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->
<Module>
 <ModulePrefs title="Test for DataRequest to Create Album">
   <Require feature="opensocial-0.7"/>
 </ModulePrefs>
 <Content type="html">
 <![CDATA[
 <script type="text/javascript">

 /**
  * Request for friend information.
  */
  function getData() {    
    var req = opensocial.newDataRequest();
	
	var params = {};
	params[opensocial.Album.Field.DESCRIPTION] = 'It is a album.';
	params[opensocial.Album.Field.THUMBNAIL_URL] = 'http://asianrice.tv/media/Boys-Before-Flowers-Episode-3/6349/part/5';
	params[opensocial.Album.Field.OWNER_ID] ='john.doe';
	params[opensocial.Album.Field.TITLE] = 'Boys Before Flowers';
	var album = opensocial.newAlbum(params);
    req.add(req.newCreateAlbumRequest(Opensocial.IdSpec.PersonId.VIEWER, album), 'viewerAlbumCreate');
    
    req.add(req.newFetchAlbumsRequest(Opensocial.IdSpec.PersonId.VIEWER, album), 'viewerAlbumFetch');
    
	req.send(onCreateAlbum);
  };

 /**
  * Parses the response to the friend information request and generates
  * html to list the friends along with their display name.
  *
  * @param {Object} dataResponse for creating Album that was requested.
  */
  function onCreateAlbum(dataResponse) {
    var viewerAlbum = dataResponse.get('viewerAlbumFetch').getData();
    var html = '';
    
    html += 'Albums: <br>';
    
    for (var i=0 ; i < viewerAlbum.length ; i++) {
    	html += viewerAlbum[i].getField(opensocial.Album.Field.DESCRIPTION);
    } 
    

    document.getElementById('message').innerHTML = html;
  };

  gadgets.util.registerOnLoadHandler(getData);
  </script>
  <div id="message"> </div>
  ]]>
  </Content>
</Module>
